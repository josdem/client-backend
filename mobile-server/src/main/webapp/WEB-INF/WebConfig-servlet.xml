<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<import resource="classpath:persistence-context.xml"/>
	<context:component-scan base-package="com.all.mobile.web" />
	<!-- Should be defined last! -->
	<!-- Used to find Jackson JSON Mapper -->
	<mvc:annotation-driven />

	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="searchService" />
		<property name="targetMethod" value="indexNewTracks" />
	</bean>

	<bean id="sendStatsJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="statsService" />
		<property name="targetMethod" value="sendStats" />
	</bean>

	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="jobDetail" />
		<property name="startDelay" value="300000" />
		<property name="repeatInterval" value="300000" />
	</bean>

	<bean id="sendStatsTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="sendStatsJobDetail" />
		<property name="startDelay" value="600000" />
		<property name="repeatInterval" value="600000" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
				<ref bean="sendStatsTrigger" />
			</list>
		</property>
	</bean>

	<!--
		- This bean resolves specific types of exceptions to corresponding
		logical - view names for error views. The default behaviour of
		DispatcherServlet - is to propagate all exceptions to the servlet
		container: this will happen - here with all other types of exceptions.
	-->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<!--  
				<prop key=".lang.Exception">uncaughtException</prop>
				-->
			</props>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" />

</beans>
